@model _3S_MVCTask.Models.Products

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
   
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.pro_Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pro_Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.pro_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.quantityPerUnit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.quantityPerUnit, new { htmlAttributes = new { @class = "form-control", required = "required", type = "number" } })
            @Html.ValidationMessageFor(model => model.quantityPerUnit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.reorderLevel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.reorderLevel, new { htmlAttributes = new { @class = "form-control", required = "required", type = "number" } })
            @Html.ValidationMessageFor(model => model.reorderLevel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.unitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.unitPrice, new { htmlAttributes = new { @class = "form-control", required = "required", type = "number" } })
            @Html.ValidationMessageFor(model => model.unitPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.unitsInStock, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.unitsInStock, new { htmlAttributes = new { @class = "form-control", required = "required", type = "number" } })
            @Html.ValidationMessageFor(model => model.unitsInStock, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.unitsOnOrder, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.unitsOnOrder, new { htmlAttributes = new { @class = "form-control", required = "required", type = "number" } })
            @Html.ValidationMessageFor(model => model.unitsOnOrder, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="text-center col-sm-offset-2">
            <button class="btn btn-success" onclick="AddProductData()">Add</button>
        </div>
    </div>
</div>
}


<script type="text/javascript">
    function AddProductData() {

        var Pname = $("#pro_Name").val();
        var pQuant = $("#quantityPerUnit").val();
        var pReorder = $("#reorderLevel").val();
        var pPrice = $("#unitPrice").val();
        var pUnSt = $("#unitsInStock").val();
        var pUnOr = $("#unitsOnOrder").val();


        var product = {
                "Id": pId,
                "pro_Name": Pname,
                "quantityPerUnit": pQuant,
                "reorderLevel": pReorder,
                "unitPrice": pPrice,
                "unitsInStock": pUnSt,
                "unitsOnOrder": pUnOr
            };

        $.post('/Products/Add/', product,
        function (data) { if (data == 0) { location = location.href; } }, 'json');

    }
</script>

